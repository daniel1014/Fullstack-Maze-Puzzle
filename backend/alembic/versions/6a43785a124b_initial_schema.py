"""initial schema

Revision ID: 6a43785a124b
Revises: 
Create Date: 2025-09-01 01:33:11.978611

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6a43785a124b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('puzzles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('grid', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('difficulty', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('puzzle_id', sa.Integer(), nullable=False),
    sa.Column('moves', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('steps_taken', sa.Integer(), nullable=True),
    sa.Column('time_ms', sa.Integer(), nullable=True),
    sa.Column('keys_collected', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('trace', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['puzzle_id'], ['puzzles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_attempt_puzzle', 'attempts', ['puzzle_id'], unique=False)
    op.create_index('ix_attempt_user', 'attempts', ['user_id'], unique=False)
    op.create_index('ix_attempt_user_puzzle_created', 'attempts', ['user_id', 'puzzle_id', sa.text('created_at DESC')], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_attempt_user_puzzle_created', table_name='attempts')
    op.drop_index('ix_attempt_user', table_name='attempts')
    op.drop_index('ix_attempt_puzzle', table_name='attempts')
    op.drop_table('attempts')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('puzzles')
    # ### end Alembic commands ###